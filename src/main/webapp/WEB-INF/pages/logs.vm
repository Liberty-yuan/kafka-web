#parse("/layout/head.vm")

#parse("/layout/sidebar.vm")
<style>
    .container .row {
        padding-top: 25px;
    }
</style>
<div class="container">

    <div class="row">
        <div class="col-md-3 ui-left-panel">
            <div class="ui inverted segment">
                <div class="ui inverted accordion">
                    #foreach($topicFilename in $topicFilenames.entrySet())
                        <div class="active title">
                            <i class="dropdown icon"></i>
                            $topicFilename.key
                        </div>
                        <div class="active content" style="padding-left: 25px;cursor: pointer;">
                            #foreach($filename in $topicFilename.value)
                                <p v-on="click: getDetail('$filename')">$filename</p>
                            #end
                        </div>

                    #end
                </div>
            </div>
        </div>
        <div class="col-md-9 ui-right-panel">
            <table class="ui inverted table">
                <thead>
                <tr>
                    <th>No.</th>
                    <th>Offset</th>
                    <th>Isvalid</th>
                    <th>Encodc</th>
                    <th>Size</th>
                    <th>Content</th>
                </tr>
                </thead>
                <tbody>
                <tr v-repeat="logs">
                    <td>{{offset}}</td>
                    <td>{{position}}</td>
                    <td>{{isvalid}}</td>
                    <td>{{compresscodec}}</td>
                    <td>{{contentSize}}</td>
                    <td class="word-break" style="width: 50%;">{{content}}</td>
                </tr>
                </tbody>
            </table>

        </div>
    </div>

    <div id='pagination' class='fn-clear'></div>
</div>
<script>
    (function (JQ) {
        $('.ui.accordion').accordion();
        new Vue({
            el: '.container',
            data: {
                logs: []
            },
            methods: {
                getDetail: function (name) {
                    var self = this;
                    self.logs = [];
                    JQ.get("/logs/get/" + name, 'json')
                            .then(function (data) {
                                self.logs = data.result;
                            })
                }
            }
        })
    })($)
</script>
#parse("/layout/foot.vm")
